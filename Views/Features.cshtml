@model Umbraco.Web.PublishedModels.Features

@{
   var bgImage = Model.Value<IPublishedContent>("backgroundImage"); 
   var ParallaxBgAttribute = ""; 
   var ParallaxCaptionAttribute = "";  
   var ParallaxBgClass = "";  
   var CardLayoutToggle="";
}
@{
    if (@Model.ParallaxBgEnable.ToString() == "True") {
     ParallaxBgAttribute = @Model.ParallaxBgPreset.ToString(); 
     ParallaxBgClass = "lax";
    }
    if (@Model.CardLayout.ToString() == "True") {
     CardLayoutToggle = "card";
    }
}

<div class="contentblock features @Model.CustomClass vh-@Model.MinimumHeight" 
style="background-color: #@Model.BackgroundColor;
" 
>
    @{
        if (bgImage != null) {
            <div class="backgroundImage @ParallaxBgClass" data-lax-preset="@ParallaxBgAttribute" data-lax-optimize style="background-image: url('@bgImage.Url'); background-size:@Model.BackgroundSize; background-repeat:@Model.BackgroundRepeat; opacity:@Model.BackgroundOpacity;"></div>
        }     
    }
    <div class="content align-items-@Model.VerticalAlignment p-xs-@Model.BlockPaddingMobile p-sm-@Model.BlockPaddingTablet p-lg-@Model.BlockPaddingDesktop" 
    style="color: #@Model.ContentColor;"
    data-aos="@Model.BlockAnimation" 
    data-aos-offset="@Model.BlockAnimationOffset" 
    data-aos-easing="@Model.BlockAnimationEasing" 
    data-aos-duration="@Model.BlockAnimationDuration"
    data-aos-delay="@Model.BlockAnimationDelay"
    >
        <div class="container @Model.ContainerSize">
            <div class="featuregrid flow-@Model.ContentFlow featuregrid-@Model.LayoutStyle">
                    @{
                        if (Model.FeaturePicker.Any()) {
							foreach (var featurePickerItems in Model.FeaturePicker.OfType<Feature>()) {		
								var image = featurePickerItems.Value<IPublishedContent>("image");
								<div class="feature">
									<div class="feature-content @CardLayoutToggle @Model.CardShadow">
										@{
											if (image != null) {
												<div class="image">
													<img class="img-fluid" src="@image.Url" alt="@featurePickerItems.ImageAltTag">
												</div>
											}
										}
										<div class="caption">
											<div class="title">
												<h3> 
													@featurePickerItems.Title
												</h3>
											</div>
											<div class="description">
												<p>
													@featurePickerItems.Description
												</p>
											</div>
										</div>
									</div>
								</div>    
							}
                        }
                    }
            </div>
        </div>
    </div>
</div>



 @* <a class="btn btn-@featurePickerItems.CallToActionStyle@featurePickerItems.CallToActionColor @featurePickerItems.CallToActionSize" href="@featurePickerItems.CallToActionLink.Url" target="@featurePickerItems.CallToActionLink.Target">@featurePickerItems.CallToActionLink.Name</a> *@